cmake_minimum_required(VERSION 2.8.11)

# duplicate global definition here
set(CMAKE_CXX_STANDARD 11)

set(SOURCE_FILES
	Actor.cpp
	Actor.h
	AtomicDecomposer.cpp
	AtomicDecomposer.h
	BiPointer.h
	Blocking.cpp
	BuildDAG.cpp
	CascadedCache.cpp
	CGLabel.h
	ConceptWithDep.h
	configure.cpp
	configure.h
	counter.h
	cpm.h
	cppi.h
	CWDArray.cpp
	CWDArray.h
	DataReasoning.cpp
	DataReasoning.h
	DataTypeCenter.cpp
	DataTypeCenter.h
	DataTypeComparator.h
	DeletelessAllocator.h
	DepSet.h
	dir_util.h
	dlCompletionGraph.cpp
	dlCompletionGraph.h
	dlCompletionTree.cpp
	dlCompletionTree.h
	dlCompletionTreeArc.h
	DLConceptTaxonomy.cpp
	DLConceptTaxonomy.h
	dlDag.cpp
	dlDag.h
	dlTBox.cpp
	dlTBox.h
	dltree.cpp
	dltree.h
	dlVertex.cpp
	dlVertex.h
	dlVHash.h
	dlVHashImpl.h
	dumpInterface.cpp
	dumpInterface.h
	dumpLisp.cpp
	dumpLisp.h
	eFaCTPlusPlus.h
	eFPPCantRegName.h
	eFPPCycleInRIA.h
	eFPPInconsistentKB.h
	eFPPNonSimpleRole.h
	eFPPSaveLoad.h
	eFPPTimeout.h
	ExtendedDataRange.cpp
	ExtendedSyntacticLocalityChecker.h
	flags.h
	fpp_assert.h
	GeneralSyntacticLocalityChecker.h
	globaldef.h
	grammar.h
	growingArrayP.h
	ifOptions.cpp
	ifOptions.h
	Incremental.cpp
	Input.cpp
	Kernel.cpp
	Kernel.h
	KnowledgeExplorer.cpp
	KnowledgeExplorer.h
	LeveLogger.cpp
	LeveLogger.h
	LocalityChecker.cpp
	LocalityChecker.h
	logging.h
	LogicFeature.cpp
	LogicFeature.h
	mergeableLabel.h
	modelCacheConst.h
	modelCacheIan.cpp
	modelCacheIan.h
	modelCacheInterface.h
	modelCacheSingleton.h
	Modularity.h
	ModuleMethod.h
	ModuleType.h
	OntologyBasedModularizer.h
	Preprocess.cpp
	PriorityMatrix.h
	procTimer.h
	ProgressIndicatorInterface.h
	RAutomaton.cpp
	RAutomaton.h
	Reasoner.cpp
	Reasoner.h
	ReasonerNom.cpp
	ReasonerNom.h
	Relevance.cpp
	RoleMaster.cpp
	RoleMaster.h
	SaveLoad.cpp
	SaveLoadManager.cpp
	SaveLoadManager.h
	SearchableStack.h
	SemanticLocalityChecker.h
	SigIndex.h
	SortedReasoning.cpp
	SyntacticLocalityChecker.h
	Tactic.cpp
	TaxGatheringWalker.h
	tAxiom.cpp
	tAxiom.h
	tAxiomSet.cpp
	tAxiomSet.h
	taxNamEntry.h
	Taxonomy.cpp
	Taxonomy.h
	TaxonomyCreator.cpp
	TaxonomyCreator.h
	taxVertex.cpp
	taxVertex.h
	tBranchingContext.h
	tConcept.cpp
	tConcept.h
	tCounter.h
	tDag2Interface.cpp
	tDag2Interface.h
	tDataEntry.h
	tDataType.h
	tDataTypeBool.h
	tDataTypeManager.h
	tDepSet.h
	tDLAxiom.cpp
	tDLAxiom.h
	tDLExpression.h
	tExpressionManager.cpp
	tExpressionManager.h
	tExpressionPrinterLISP.h
	tExpressionTranslator.h
	tFastSet.h
	tHeadTailCache.h
	tIndividual.h
	tKBFlags.h
	tLabeller.h
	tLexeme.h
	tNamedEntry.h
	tNameSet.h
	tNAryQueue.h
	tNECollection.h
	ToDoList.h
	tOntology.h
	tOntologyAtom.h
	tOntologyLoader.h
	tOntologyPrinterLISP.h
	tProgressMonitor.h
	tRareSaveStack.h
	tRelated.h
	tRestorer.h
	tRole.cpp
	tRole.h
	tSaveList.h
	tSaveStack.h
	tSetAsTree.h
	tSignature.h
	tSignatureUpdater.h
	tsttree.h
	WalkerInterface.h
	dir_util.cpp
)

# Kernel
add_library(Kernel ${SOURCE_FILES})
SET(BUILD_SHARED_LIBS OFF)

# allow library users to find headers
target_include_directories(Kernel PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
